Kinect Head Pose Estimator
==========================

This code is originally from a paper published by [Gabriele Fanelli][paper].

[paper]: http://www.vision.ee.ethz.ch/~gfanelli/head_pose/head_forest.html

The actual code for head pose estimation is contained in the CR* files present in this folder. The main.cpp file shows an example use of the code on (compressed) depth images
as the ones provided in the data/ folder.
A forest is provided in the trees/ folder, which was trained on depth images of people turning theirs heads in front of the Kinect, sitting at around 1 m distance from the sensor;
therefore, the forest will give optimal results for similar scenarios and will fail on completely different settings.

NB: This demo contains the code and forest related to our DAGM paper, i.e., the provided trees are trained on the Biwi Kinect Head Pose Database (all of it), and should therefore not be used
for comparison to other methods using high quality depth scans, like the ETH Face Pose Range Image Data Set of Breitenstein et al.

In order to compile, OpenCV2.3 is required, please modify the CMakeLists.txt file according to your local OpenCV installation.

To run the example code, type ./head_pose_estimation config.txt data/frame_XXXX_depth.bin
The config.txt file contains all parameters needed for the head pose estimation, e.g., the path to the forest, the stride, and z threshold used to segment the person from the background.
Please note that a depth.cal file should be present in the same folder as the depth image.

In the "code/" folder, an additional example is provided which runs on a stream of depth images coming from a Kinect sensor. The demo requires
(in addition to OpenCV), the OpenNI, freeglut, and OpenGL libraries.
For installing OpenNI on Ubuntu 11.4, I recommend using this tutorial
http://tirokartblog.wordpress.com/2011/06/22/kinect-driver-and-samples-installation-on-ubuntu-11-04/

To run the demo, type ./head_pose_estimation_demo config.txt

13.10.2011: removed bug in CRForestEStimator::estimate (thanks to Cristobal Belles)
